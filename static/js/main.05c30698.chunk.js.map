{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isStarted","setStart","sortType","setSortType","isReversed","setReverse","visibleGoods","sort","a","b","localeCompare","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"oMAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,QAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAiCJ,oBAAS,GAA1C,mBAAOK,EAAP,KAAmBC,EAAnB,KACMC,EAAY,UAAOT,GAEzB,OAAqB,SAAbK,GACN,IAAkB,YAAbA,EACHI,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,IAAkB,WAAbP,EACHI,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAU7C,OAJKP,GACHE,EAAaM,UAIb,sBAAKC,UAAU,MAAf,WACIb,GACA,sBAAKa,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,wCAIA,wBACEC,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMd,GAAS,IAH1B,sBAUHD,GACC,sBAAKa,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAMZ,EAAY,YAH7B,iCAQA,wBACEW,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAMZ,EAAY,WAH7B,4BAQA,wBACEW,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAMV,GAAW,IAH5B,qBAQA,wBACES,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAMV,GAAW,IAH5B,sBASF,qBAAKQ,UAAU,iBAAf,SACE,oBAAIA,UAAU,QAAd,SACGP,EAAaU,KAAI,SAAAC,GAAI,OACpB,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,iBC/FvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.05c30698.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [sortType, setSortType] = useState('none');\n  const [isReversed, setReverse] = useState(false);\n  const visibleGoods = [...goodsFromServer];\n\n  switch (sortType === 'none') {\n    case sortType === 'alpabet':\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case sortType === 'length':\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n  }\n\n  if (!isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <div className=\"App__container\">\n          <h1 className=\"App__title\">\n            Press Start to load goods.\n          </h1>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setStart(true)}\n          >\n            Start\n          </button>\n        </div>\n      )}\n\n      {isStarted && (\n        <div className=\"container\">\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className=\"buttons__list\"\n              onClick={() => setSortType('alpabet')}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"buttons__list\"\n              onClick={() => setSortType('length')}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"buttons__list\"\n              onClick={() => setReverse(true)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"buttons__list\"\n              onClick={() => setReverse(false)}\n            >\n              Reset\n            </button>\n          </div>\n\n          <div className=\"list-container\">\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => (\n                <li\n                  className=\"Goods__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      {/* <button type=\"button\">\n        Start\n      </button> */}\n\n      {/* <button type=\"button\">\n        Sort alphabetically\n      </button>\n\n      <button type=\"button\">\n        Sort by length\n      </button>\n\n      <button type=\"button\">\n        Reverse\n      </button>\n\n      <button type=\"button\">\n        Reset\n      </button> */}\n\n      {/* <ul className=\"Goods\">\n        <li className=\"Goods__item\">Dumplings</li>\n        <li className=\"Goods__item\">Carrot</li>\n        <li className=\"Goods__item\">Eggs</li>\n        <li className=\"Goods__item\">...</li>\n      </ul> */}\n    </div>\n  );\n\n  // <div className=\"App\">\n  //   <button type=\"button\">\n  //     Start\n  //   </button>\n\n  //   <button type=\"button\">\n  //     Sort alphabetically\n  //   </button>\n\n  //   <button type=\"button\">\n  //     Sort by length\n  //   </button>\n\n  //   <button type=\"button\">\n  //     Reverse\n  //   </button>\n\n  //   <button type=\"button\">\n  //     Reset\n  //   </button>\n\n  //   <ul className=\"Goods\">\n  //     <li className=\"Goods__item\">Dumplings</li>\n  //     <li className=\"Goods__item\">Carrot</li>\n  //     <li className=\"Goods__item\">Eggs</li>\n  //     <li className=\"Goods__item\">...</li>\n  //   </ul>\n  // </div>\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}